// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

// Mixin for bullet-proof font declaration..
@mixin declare-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
  @font-face {
    font-family: '#{$font-family}';
    src: url('../fonts/#{$font-filename}.eot');
    src: url('../fonts/#{$font-filename}.eot?#iefix') format('embedded-opentype'),
      url('../fonts/#{$font-filename}.woff') format('woff'),
      url('../fonts/#{$font-filename}.ttf') format('truetype'),
      url('../fonts/#{$font-filename}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
    font-stretch: $font-stretch;
  }
}

/**
 * Mixin for media queries
 * @link http://getbootstrap.com/docs/4.0/layout/grid/#grid-options
 *
 * Usage
 *
 * .test {
 *   color: red;
 *   @include mq(sm) {
 *     color: blue;
 *   }
 * }
 *
 */
@mixin mq($point) {
  @if $point == xs {
    @media (max-width: 575px) { @content; }
  }
  @else if $point == sm {
    @media (min-width: 576px) { @content; }
  }
  @else if $point == md {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == lg {
    @media (min-width: 992px) { @content; }
  }
  @else if $point == xl {
    @media (min-width: 1200px) { @content; }
  }
}